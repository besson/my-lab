// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.app = {
    model: {},
    collection: {},
    view: {}
  };

  app.model.Tweet = (function(_super) {

    __extends(Tweet, _super);

    function Tweet() {
      return Tweet.__super__.constructor.apply(this, arguments);
    }

    return Tweet;

  })(Backbone.Model);

  app.collection.TweetList = (function(_super) {

    __extends(TweetList, _super);

    function TweetList() {
      return TweetList.__super__.constructor.apply(this, arguments);
    }

    TweetList.prototype.model = app.model.Tweet;

    TweetList.prototype.parse = function(response) {
      return response.results;
    };

    TweetList.prototype.getTweets = function(searchKey) {
      return this.url = "http://search.twitter.com/search.json?callback=?&q=" + searchKey;
    };

    return TweetList;

  })(Backbone.Collection);

  app.view.TweetView = (function(_super) {

    __extends(TweetView, _super);

    function TweetView() {
      return TweetView.__super__.constructor.apply(this, arguments);
    }

    TweetView.prototype.el = $("#tweets");

    TweetView.prototype.render = function() {
      var content;
      content = "<li>" + this.model.get("text") + "</li>";
      return $("#tweets").append(content);
    };

    return TweetView;

  })(Backbone.View);

  app.view.TweetListView = (function(_super) {

    __extends(TweetListView, _super);

    function TweetListView() {
      return TweetListView.__super__.constructor.apply(this, arguments);
    }

    TweetListView.prototype.el = $("#tweets-container");

    TweetListView.prototype.initialize = function() {
      return this.collection.on("reset", this.render, this);
    };

    TweetListView.prototype.render = function() {
      $("#tweets").html("");
      return this.collection.each(this.addOne, this);
    };

    TweetListView.prototype.addOne = function(tweet) {
      var tweetView;
      tweetView = new app.view.TweetView({
        model: tweet
      });
      return tweetView.render();
    };

    return TweetListView;

  })(Backbone.View);

  app.view.TweetFinder = (function(_super) {

    __extends(TweetFinder, _super);

    function TweetFinder() {
      return TweetFinder.__super__.constructor.apply(this, arguments);
    }

    TweetFinder.prototype.render = function() {
      var tweetList, tweetListView;
      tweetList = new app.collection.TweetList();
      tweetListView = new app.view.TweetListView({
        collection: tweetList
      });
      $("#search-submit").click(function(e) {
        e.preventDefault();
        tweetList.getTweets($("#search-key").val());
        return tweetList.fetch({
          success: function() {
            return tweetListView.render();
          }
        });
      });
      return setInterval(function() {
        return tweetList.fetch();
      }, 4000);
    };

    return TweetFinder;

  })(Backbone.View);

}).call(this);
